<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shop.mapper.ProductMapper">

    <select id="findById" parameterType="int" resultType="Product">
        SELECT * FROM products WHERE id = #{id}
    </select>

    <select id="search" resultType="Product">
        SELECT * FROM products
        WHERE (
            name LIKE CONCAT(#{keyword}, '%') OR
            name LIKE CONCAT('%', #{keyword}, '%') OR
            description LIKE CONCAT('%', #{keyword}, '%')
        )
        ORDER BY
        <choose>
            <when test="sort == 'price_asc'">
                price ASC
            </when>
            <when test="sort == 'price_desc'">
                price DESC
            </when>
            <when test="sort == 'sales_desc'">
                sales DESC
            </when>
            <when test="sort == 'create_time_desc'">
                create_time DESC
            </when>
            <otherwise>
                id DESC
            </otherwise>
        </choose>
    </select>

    <select id="findHotProducts" parameterType="int" resultType="Product">
        SELECT * FROM products ORDER BY sales DESC LIMIT #{limit}
    </select>

    <select id="findLatestProducts" parameterType="int" resultType="Product">
        SELECT *
        FROM products
        ORDER BY id DESC
        LIMIT #{limit}
    </select>

    <select id="findByPage" resultType="Product">
        SELECT * FROM products
        <choose>
            <when test="sort == 'price_asc'">
                ORDER BY price ASC
            </when>
            <when test="sort == 'price_desc'">
                ORDER BY price DESC
            </when>
            <when test="sort == 'sales_desc'">
                ORDER BY sales DESC
            </when>
            <when test="sort == 'id_desc'">
                ORDER BY id DESC
            </when>
            <otherwise>
                ORDER BY id DESC
            </otherwise>
        </choose>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM products
    </select>

    <update id="update" parameterType="com.shop.entity.Product">
        UPDATE products SET 
            name = #{name},
            description = #{description},
            price = #{price},
            stock = #{stock},
            image = #{image}
        WHERE id = #{id}
    </update>

    <!-- 获取搜索建议（自动补全） -->
    <select id="findByKeyword" resultType="string">
        SELECT DISTINCT name FROM products 
        WHERE(
            name LIKE CONCAT(#{keyword}, '%') OR 
            name LIKE CONCAT('%', #{keyword}, '%') OR
            description LIKE CONCAT('%', #{keyword}, '%')
        )
        ORDER BY 
            CASE 
                WHEN name LIKE CONCAT(#{keyword}, '%') THEN 1
                WHEN name LIKE CONCAT('% ', #{keyword}, '%') THEN 2
                WHEN name LIKE CONCAT('%', #{keyword}, '%') THEN 3
                ELSE 4
            END,
            sales DESC, 
            id DESC
        LIMIT #{limit}
    </select>
</mapper>